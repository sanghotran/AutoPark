ARM GAS  /tmp/ccgXEIYh.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB76:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "auto_park.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccgXEIYh.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  47:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** MACHINE machine;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_TIM1_Init(void);
  60:Core/Src/main.c **** static void MX_TIM2_Init(void);
  61:Core/Src/main.c **** static void MX_TIM3_Init(void);
  62:Core/Src/main.c **** static void MX_TIM4_Init(void);
  63:Core/Src/main.c **** static void MX_SPI1_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** void auto_park_init(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c **** 	// Init value for pid of motor
  68:Core/Src/main.c **** 	machine.up.pid.kp = 1;
  69:Core/Src/main.c **** 	machine.up.pid.ki = 0.001;
  70:Core/Src/main.c **** 	machine.up.pid.kd = 0.1;
  71:Core/Src/main.c **** 	machine.up.pid.ERROR = 2;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** 	machine.roll.pid.kp = 1;
  74:Core/Src/main.c **** 	machine.roll.pid.ki = 0.001;
  75:Core/Src/main.c **** 	machine.roll.pid.kd = 0.1;
  76:Core/Src/main.c **** 	machine.roll.pid.ERROR = 2;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** 	machine.out.pid.kp = 1;
  79:Core/Src/main.c **** 	machine.out.pid.ki = 0.001;
  80:Core/Src/main.c **** 	machine.out.pid.kd = 0.1;
  81:Core/Src/main.c **** 	machine.out.pid.ERROR = 2;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** 	// Init pin for motor
  84:Core/Src/main.c **** 	
  85:Core/Src/main.c **** 	// Init other value of machine
  86:Core/Src/main.c **** 	machine.mode = 0; // mode idle disconnect
  87:Core/Src/main.c **** }
  88:Core/Src/main.c **** /* USER CODE END PFP */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
ARM GAS  /tmp/ccgXEIYh.s 			page 3


  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /**
  96:Core/Src/main.c ****   * @brief  The application entry point.
  97:Core/Src/main.c ****   * @retval int
  98:Core/Src/main.c ****   */
  99:Core/Src/main.c **** int main(void)
 100:Core/Src/main.c **** {
 101:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 108:Core/Src/main.c ****   HAL_Init();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Configure the system clock */
 115:Core/Src/main.c ****   SystemClock_Config();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Initialize all configured peripherals */
 122:Core/Src/main.c ****   MX_GPIO_Init();
 123:Core/Src/main.c ****   MX_TIM1_Init();
 124:Core/Src/main.c ****   MX_TIM2_Init();
 125:Core/Src/main.c ****   MX_TIM3_Init();
 126:Core/Src/main.c ****   MX_TIM4_Init();
 127:Core/Src/main.c ****   MX_SPI1_Init();
 128:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 129:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 130:Core/Src/main.c ****   auto_park_init();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE END 2 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Infinite loop */
 135:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 136:Core/Src/main.c ****   while (1)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c **** 	  process_mode(&machine);
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  /tmp/ccgXEIYh.s 			page 4


 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 157:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 167:Core/Src/main.c ****   {
 168:Core/Src/main.c ****     Error_Handler();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 184:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 185:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_SPI1_Init(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 204:Core/Src/main.c **** 
ARM GAS  /tmp/ccgXEIYh.s 			page 5


 205:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 206:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 207:Core/Src/main.c ****   hspi1.Instance = SPI1;
 208:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 209:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 210:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 211:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 212:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 213:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 214:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 215:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 216:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 217:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 218:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 219:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 231:Core/Src/main.c ****   * @param None
 232:Core/Src/main.c ****   * @retval None
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c **** static void MX_TIM1_Init(void)
 235:Core/Src/main.c **** {
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 242:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 247:Core/Src/main.c ****   htim1.Instance = TIM1;
 248:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 249:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 250:Core/Src/main.c ****   htim1.Init.Period = 65535;
 251:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 252:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 253:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 254:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 255:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 256:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 257:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 258:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 259:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 260:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 261:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
ARM GAS  /tmp/ccgXEIYh.s 			page 6


 262:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 263:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 268:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 269:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 281:Core/Src/main.c ****   * @param None
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** static void MX_TIM2_Init(void)
 285:Core/Src/main.c **** {
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 292:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 293:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 298:Core/Src/main.c ****   htim2.Instance = TIM2;
 299:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 300:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 301:Core/Src/main.c ****   htim2.Init.Period = 65535;
 302:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 303:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 304:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 309:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
 317:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 318:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccgXEIYh.s 			page 7


 319:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 324:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 325:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 326:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 327:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 342:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /**
 347:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 348:Core/Src/main.c ****   * @param None
 349:Core/Src/main.c ****   * @retval None
 350:Core/Src/main.c ****   */
 351:Core/Src/main.c **** static void MX_TIM3_Init(void)
 352:Core/Src/main.c **** {
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 359:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 364:Core/Src/main.c ****   htim3.Instance = TIM3;
 365:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 366:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 367:Core/Src/main.c ****   htim3.Init.Period = 65535;
 368:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 369:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 370:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 371:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 372:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 373:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 374:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 375:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
ARM GAS  /tmp/ccgXEIYh.s 			page 8


 376:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 377:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 378:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 379:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 380:Core/Src/main.c ****   {
 381:Core/Src/main.c ****     Error_Handler();
 382:Core/Src/main.c ****   }
 383:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 384:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 385:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 386:Core/Src/main.c ****   {
 387:Core/Src/main.c ****     Error_Handler();
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** }
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** /**
 396:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 397:Core/Src/main.c ****   * @param None
 398:Core/Src/main.c ****   * @retval None
 399:Core/Src/main.c ****   */
 400:Core/Src/main.c **** static void MX_TIM4_Init(void)
 401:Core/Src/main.c **** {
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 408:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 413:Core/Src/main.c ****   htim4.Instance = TIM4;
 414:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 415:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 416:Core/Src/main.c ****   htim4.Init.Period = 65535;
 417:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 418:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 419:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 420:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 421:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 422:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 423:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 424:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 425:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 426:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 427:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 428:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 429:Core/Src/main.c ****   {
 430:Core/Src/main.c ****     Error_Handler();
 431:Core/Src/main.c ****   }
 432:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  /tmp/ccgXEIYh.s 			page 9


 433:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 434:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****     Error_Handler();
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** }
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** /**
 445:Core/Src/main.c ****   * @brief GPIO Initialization Function
 446:Core/Src/main.c ****   * @param None
 447:Core/Src/main.c ****   * @retval None
 448:Core/Src/main.c ****   */
 449:Core/Src/main.c **** static void MX_GPIO_Init(void)
 450:Core/Src/main.c **** {
  26              		.loc 1 450 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 451:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 451 3 view .LVU1
  43              		.loc 1 451 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 454:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  49              		.loc 1 454 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 454 3 view .LVU4
  52              		.loc 1 454 3 view .LVU5
  53 0010 204B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F02002 		orr	r2, r2, #32
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 454 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F02002 		and	r2, r2, #32
  60 0020 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccgXEIYh.s 			page 10


  61              		.loc 1 454 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 454 3 view .LVU8
 455:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 455 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 455 3 view .LVU10
  68              		.loc 1 455 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00402 		orr	r2, r2, #4
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 455 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F00402 		and	r2, r2, #4
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 455 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 455 3 view .LVU14
 456:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 456 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 456 3 view .LVU16
  83              		.loc 1 456 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00802 		orr	r2, r2, #8
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 456 3 view .LVU18
  88 003e 9B69     		ldr	r3, [r3, #24]
  89 0040 03F00803 		and	r3, r3, #8
  90 0044 0393     		str	r3, [sp, #12]
  91              		.loc 1 456 3 view .LVU19
  92 0046 039B     		ldr	r3, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 456 3 view .LVU20
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 459:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
  95              		.loc 1 459 3 view .LVU21
  96 0048 DFF84C80 		ldr	r8, .L3+4
  97 004c 2246     		mov	r2, r4
  98 004e 3821     		movs	r1, #56
  99 0050 4046     		mov	r0, r8
 100 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 462:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 102              		.loc 1 462 3 view .LVU22
 103 0056 114D     		ldr	r5, .L3+8
 104 0058 2246     		mov	r2, r4
 105 005a 4FF44071 		mov	r1, #768
 106 005e 2846     		mov	r0, r5
 107 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 463:Core/Src/main.c **** 
ARM GAS  /tmp/ccgXEIYh.s 			page 11


 464:Core/Src/main.c ****   /*Configure GPIO pins : PA3 PA4 PA5 */
 465:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 109              		.loc 1 465 3 view .LVU23
 110              		.loc 1 465 23 is_stmt 0 view .LVU24
 111 0064 3823     		movs	r3, #56
 112 0066 0493     		str	r3, [sp, #16]
 466:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 466 3 is_stmt 1 view .LVU25
 114              		.loc 1 466 24 is_stmt 0 view .LVU26
 115 0068 0127     		movs	r7, #1
 116 006a 0597     		str	r7, [sp, #20]
 467:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 467 3 is_stmt 1 view .LVU27
 118              		.loc 1 467 24 is_stmt 0 view .LVU28
 119 006c 0694     		str	r4, [sp, #24]
 468:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 468 3 is_stmt 1 view .LVU29
 121              		.loc 1 468 25 is_stmt 0 view .LVU30
 122 006e 0226     		movs	r6, #2
 123 0070 0796     		str	r6, [sp, #28]
 469:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 469 3 is_stmt 1 view .LVU31
 125 0072 04A9     		add	r1, sp, #16
 126 0074 4046     		mov	r0, r8
 127 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /*Configure GPIO pins : PB8 PB9 */
 472:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 129              		.loc 1 472 3 view .LVU32
 130              		.loc 1 472 23 is_stmt 0 view .LVU33
 131 007a 4FF44073 		mov	r3, #768
 132 007e 0493     		str	r3, [sp, #16]
 473:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 133              		.loc 1 473 3 is_stmt 1 view .LVU34
 134              		.loc 1 473 24 is_stmt 0 view .LVU35
 135 0080 0597     		str	r7, [sp, #20]
 474:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 474 3 is_stmt 1 view .LVU36
 137              		.loc 1 474 24 is_stmt 0 view .LVU37
 138 0082 0694     		str	r4, [sp, #24]
 475:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 475 3 is_stmt 1 view .LVU38
 140              		.loc 1 475 25 is_stmt 0 view .LVU39
 141 0084 0796     		str	r6, [sp, #28]
 476:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 476 3 is_stmt 1 view .LVU40
 143 0086 04A9     		add	r1, sp, #16
 144 0088 2846     		mov	r0, r5
 145 008a FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** }
 147              		.loc 1 478 1 is_stmt 0 view .LVU41
 148 008e 08B0     		add	sp, sp, #32
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccgXEIYh.s 			page 12


 151              		@ sp needed
 152 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 153              	.L4:
 154              		.align	2
 155              	.L3:
 156 0094 00100240 		.word	1073876992
 157 0098 00080140 		.word	1073809408
 158 009c 000C0140 		.word	1073810432
 159              		.cfi_endproc
 160              	.LFE76:
 162              		.section	.text.auto_park_init,"ax",%progbits
 163              		.align	1
 164              		.global	auto_park_init
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	auto_park_init:
 170              	.LFB68:
  66:Core/Src/main.c **** 	// Init value for pid of motor
 171              		.loc 1 66 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
  68:Core/Src/main.c **** 	machine.up.pid.ki = 0.001;
 176              		.loc 1 68 2 view .LVU43
  68:Core/Src/main.c **** 	machine.up.pid.ki = 0.001;
 177              		.loc 1 68 20 is_stmt 0 view .LVU44
 178 0000 0D4B     		ldr	r3, .L6
 179 0002 4FF07E5C 		mov	ip, #1065353216
 180 0006 C3F804C0 		str	ip, [r3, #4]	@ float
  69:Core/Src/main.c **** 	machine.up.pid.kd = 0.1;
 181              		.loc 1 69 2 is_stmt 1 view .LVU45
  69:Core/Src/main.c **** 	machine.up.pid.kd = 0.1;
 182              		.loc 1 69 20 is_stmt 0 view .LVU46
 183 000a 0C48     		ldr	r0, .L6+4
 184 000c 9860     		str	r0, [r3, #8]	@ float
  70:Core/Src/main.c **** 	machine.up.pid.ERROR = 2;
 185              		.loc 1 70 2 is_stmt 1 view .LVU47
  70:Core/Src/main.c **** 	machine.up.pid.ERROR = 2;
 186              		.loc 1 70 20 is_stmt 0 view .LVU48
 187 000e 0C49     		ldr	r1, .L6+8
 188 0010 D960     		str	r1, [r3, #12]	@ float
  71:Core/Src/main.c **** 
 189              		.loc 1 71 2 is_stmt 1 view .LVU49
  71:Core/Src/main.c **** 
 190              		.loc 1 71 23 is_stmt 0 view .LVU50
 191 0012 0222     		movs	r2, #2
 192 0014 1A62     		str	r2, [r3, #32]
  73:Core/Src/main.c **** 	machine.roll.pid.ki = 0.001;
 193              		.loc 1 73 2 is_stmt 1 view .LVU51
  73:Core/Src/main.c **** 	machine.roll.pid.ki = 0.001;
 194              		.loc 1 73 22 is_stmt 0 view .LVU52
 195 0016 C3F850C0 		str	ip, [r3, #80]	@ float
  74:Core/Src/main.c **** 	machine.roll.pid.kd = 0.1;
 196              		.loc 1 74 2 is_stmt 1 view .LVU53
  74:Core/Src/main.c **** 	machine.roll.pid.kd = 0.1;
ARM GAS  /tmp/ccgXEIYh.s 			page 13


 197              		.loc 1 74 22 is_stmt 0 view .LVU54
 198 001a 5865     		str	r0, [r3, #84]	@ float
  75:Core/Src/main.c **** 	machine.roll.pid.ERROR = 2;
 199              		.loc 1 75 2 is_stmt 1 view .LVU55
  75:Core/Src/main.c **** 	machine.roll.pid.ERROR = 2;
 200              		.loc 1 75 22 is_stmt 0 view .LVU56
 201 001c 9965     		str	r1, [r3, #88]	@ float
  76:Core/Src/main.c **** 
 202              		.loc 1 76 2 is_stmt 1 view .LVU57
  76:Core/Src/main.c **** 
 203              		.loc 1 76 25 is_stmt 0 view .LVU58
 204 001e DA66     		str	r2, [r3, #108]
  78:Core/Src/main.c **** 	machine.out.pid.ki = 0.001;
 205              		.loc 1 78 2 is_stmt 1 view .LVU59
  78:Core/Src/main.c **** 	machine.out.pid.ki = 0.001;
 206              		.loc 1 78 21 is_stmt 0 view .LVU60
 207 0020 C3F89CC0 		str	ip, [r3, #156]	@ float
  79:Core/Src/main.c **** 	machine.out.pid.kd = 0.1;
 208              		.loc 1 79 2 is_stmt 1 view .LVU61
  79:Core/Src/main.c **** 	machine.out.pid.kd = 0.1;
 209              		.loc 1 79 21 is_stmt 0 view .LVU62
 210 0024 C3F8A000 		str	r0, [r3, #160]	@ float
  80:Core/Src/main.c **** 	machine.out.pid.ERROR = 2;
 211              		.loc 1 80 2 is_stmt 1 view .LVU63
  80:Core/Src/main.c **** 	machine.out.pid.ERROR = 2;
 212              		.loc 1 80 21 is_stmt 0 view .LVU64
 213 0028 C3F8A410 		str	r1, [r3, #164]	@ float
  81:Core/Src/main.c **** 
 214              		.loc 1 81 2 is_stmt 1 view .LVU65
  81:Core/Src/main.c **** 
 215              		.loc 1 81 24 is_stmt 0 view .LVU66
 216 002c C3F8B820 		str	r2, [r3, #184]
  86:Core/Src/main.c **** }
 217              		.loc 1 86 2 is_stmt 1 view .LVU67
  86:Core/Src/main.c **** }
 218              		.loc 1 86 15 is_stmt 0 view .LVU68
 219 0030 0022     		movs	r2, #0
 220 0032 83F8E421 		strb	r2, [r3, #484]
  87:Core/Src/main.c **** /* USER CODE END PFP */
 221              		.loc 1 87 1 view .LVU69
 222 0036 7047     		bx	lr
 223              	.L7:
 224              		.align	2
 225              	.L6:
 226 0038 00000000 		.word	machine
 227 003c 6F12833A 		.word	981668463
 228 0040 CDCCCC3D 		.word	1036831949
 229              		.cfi_endproc
 230              	.LFE68:
 232              		.section	.text.Error_Handler,"ax",%progbits
 233              		.align	1
 234              		.global	Error_Handler
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	Error_Handler:
 240              	.LFB77:
ARM GAS  /tmp/ccgXEIYh.s 			page 14


 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** /* USER CODE END 4 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** /**
 485:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 486:Core/Src/main.c ****   * @retval None
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c **** void Error_Handler(void)
 489:Core/Src/main.c **** {
 241              		.loc 1 489 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ Volatile: function does not return.
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 490:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 491:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 492:Core/Src/main.c ****   __disable_irq();
 247              		.loc 1 492 3 view .LVU71
 248              	.LBB7:
 249              	.LBI7:
 250              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccgXEIYh.s 			page 15


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /tmp/ccgXEIYh.s 			page 16


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 251              		.loc 2 140 27 view .LVU72
 252              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 253              		.loc 2 142 3 view .LVU73
 254              		.syntax unified
 255              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccgXEIYh.s 			page 17


 256 0000 72B6     		cpsid i
 257              	@ 0 "" 2
 258              		.thumb
 259              		.syntax unified
 260              	.L9:
 261              	.LBE8:
 262              	.LBE7:
 493:Core/Src/main.c ****   while (1)
 263              		.loc 1 493 3 view .LVU74
 494:Core/Src/main.c ****   {
 495:Core/Src/main.c ****   }
 264              		.loc 1 495 3 view .LVU75
 493:Core/Src/main.c ****   while (1)
 265              		.loc 1 493 9 view .LVU76
 266 0002 FEE7     		b	.L9
 267              		.cfi_endproc
 268              	.LFE77:
 270              		.section	.text.MX_TIM1_Init,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	MX_TIM1_Init:
 277              	.LFB72:
 235:Core/Src/main.c **** 
 278              		.loc 1 235 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 48
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 00B5     		push	{lr}
 283              	.LCFI3:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 14, -4
 286 0002 8DB0     		sub	sp, sp, #52
 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 56
 241:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 289              		.loc 1 241 3 view .LVU78
 241:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 290              		.loc 1 241 27 is_stmt 0 view .LVU79
 291 0004 2422     		movs	r2, #36
 292 0006 0021     		movs	r1, #0
 293 0008 03A8     		add	r0, sp, #12
 294 000a FFF7FEFF 		bl	memset
 295              	.LVL4:
 242:Core/Src/main.c **** 
 296              		.loc 1 242 3 is_stmt 1 view .LVU80
 242:Core/Src/main.c **** 
 297              		.loc 1 242 27 is_stmt 0 view .LVU81
 298 000e 0023     		movs	r3, #0
 299 0010 0193     		str	r3, [sp, #4]
 300 0012 0293     		str	r3, [sp, #8]
 247:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 301              		.loc 1 247 3 is_stmt 1 view .LVU82
 247:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 302              		.loc 1 247 18 is_stmt 0 view .LVU83
 303 0014 1048     		ldr	r0, .L16
ARM GAS  /tmp/ccgXEIYh.s 			page 18


 304 0016 114A     		ldr	r2, .L16+4
 305 0018 0260     		str	r2, [r0]
 248:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 306              		.loc 1 248 3 is_stmt 1 view .LVU84
 248:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 307              		.loc 1 248 24 is_stmt 0 view .LVU85
 308 001a 4360     		str	r3, [r0, #4]
 249:Core/Src/main.c ****   htim1.Init.Period = 65535;
 309              		.loc 1 249 3 is_stmt 1 view .LVU86
 249:Core/Src/main.c ****   htim1.Init.Period = 65535;
 310              		.loc 1 249 26 is_stmt 0 view .LVU87
 311 001c 8360     		str	r3, [r0, #8]
 250:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 312              		.loc 1 250 3 is_stmt 1 view .LVU88
 250:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 313              		.loc 1 250 21 is_stmt 0 view .LVU89
 314 001e 4FF6FF72 		movw	r2, #65535
 315 0022 C260     		str	r2, [r0, #12]
 251:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 316              		.loc 1 251 3 is_stmt 1 view .LVU90
 251:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 317              		.loc 1 251 28 is_stmt 0 view .LVU91
 318 0024 0361     		str	r3, [r0, #16]
 252:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 319              		.loc 1 252 3 is_stmt 1 view .LVU92
 252:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 320              		.loc 1 252 32 is_stmt 0 view .LVU93
 321 0026 4361     		str	r3, [r0, #20]
 253:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 322              		.loc 1 253 3 is_stmt 1 view .LVU94
 253:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 323              		.loc 1 253 32 is_stmt 0 view .LVU95
 324 0028 8361     		str	r3, [r0, #24]
 254:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 325              		.loc 1 254 3 is_stmt 1 view .LVU96
 254:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 326              		.loc 1 254 23 is_stmt 0 view .LVU97
 327 002a 0123     		movs	r3, #1
 328 002c 0393     		str	r3, [sp, #12]
 255:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 329              		.loc 1 255 3 is_stmt 1 view .LVU98
 256:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 330              		.loc 1 256 3 view .LVU99
 256:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 331              		.loc 1 256 24 is_stmt 0 view .LVU100
 332 002e 0593     		str	r3, [sp, #20]
 257:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 333              		.loc 1 257 3 is_stmt 1 view .LVU101
 258:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 334              		.loc 1 258 3 view .LVU102
 259:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 335              		.loc 1 259 3 view .LVU103
 260:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 336              		.loc 1 260 3 view .LVU104
 260:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 337              		.loc 1 260 24 is_stmt 0 view .LVU105
 338 0030 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/ccgXEIYh.s 			page 19


 261:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 339              		.loc 1 261 3 is_stmt 1 view .LVU106
 262:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 340              		.loc 1 262 3 view .LVU107
 263:Core/Src/main.c ****   {
 341              		.loc 1 263 3 view .LVU108
 263:Core/Src/main.c ****   {
 342              		.loc 1 263 7 is_stmt 0 view .LVU109
 343 0032 03A9     		add	r1, sp, #12
 344 0034 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 345              	.LVL5:
 263:Core/Src/main.c ****   {
 346              		.loc 1 263 6 discriminator 1 view .LVU110
 347 0038 50B9     		cbnz	r0, .L14
 267:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 348              		.loc 1 267 3 is_stmt 1 view .LVU111
 267:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 349              		.loc 1 267 37 is_stmt 0 view .LVU112
 350 003a 0023     		movs	r3, #0
 351 003c 0193     		str	r3, [sp, #4]
 268:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 352              		.loc 1 268 3 is_stmt 1 view .LVU113
 268:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 353              		.loc 1 268 33 is_stmt 0 view .LVU114
 354 003e 0293     		str	r3, [sp, #8]
 269:Core/Src/main.c ****   {
 355              		.loc 1 269 3 is_stmt 1 view .LVU115
 269:Core/Src/main.c ****   {
 356              		.loc 1 269 7 is_stmt 0 view .LVU116
 357 0040 01A9     		add	r1, sp, #4
 358 0042 0548     		ldr	r0, .L16
 359 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 360              	.LVL6:
 269:Core/Src/main.c ****   {
 361              		.loc 1 269 6 discriminator 1 view .LVU117
 362 0048 20B9     		cbnz	r0, .L15
 277:Core/Src/main.c **** 
 363              		.loc 1 277 1 view .LVU118
 364 004a 0DB0     		add	sp, sp, #52
 365              	.LCFI5:
 366              		.cfi_remember_state
 367              		.cfi_def_cfa_offset 4
 368              		@ sp needed
 369 004c 5DF804FB 		ldr	pc, [sp], #4
 370              	.L14:
 371              	.LCFI6:
 372              		.cfi_restore_state
 265:Core/Src/main.c ****   }
 373              		.loc 1 265 5 is_stmt 1 view .LVU119
 374 0050 FFF7FEFF 		bl	Error_Handler
 375              	.LVL7:
 376              	.L15:
 271:Core/Src/main.c ****   }
 377              		.loc 1 271 5 view .LVU120
 378 0054 FFF7FEFF 		bl	Error_Handler
 379              	.LVL8:
 380              	.L17:
ARM GAS  /tmp/ccgXEIYh.s 			page 20


 381              		.align	2
 382              	.L16:
 383 0058 00000000 		.word	htim1
 384 005c 002C0140 		.word	1073818624
 385              		.cfi_endproc
 386              	.LFE72:
 388              		.section	.text.MX_TIM2_Init,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	MX_TIM2_Init:
 395              	.LFB73:
 285:Core/Src/main.c **** 
 396              		.loc 1 285 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 56
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 00B5     		push	{lr}
 401              	.LCFI7:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 14, -4
 404 0002 8FB0     		sub	sp, sp, #60
 405              	.LCFI8:
 406              		.cfi_def_cfa_offset 64
 291:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 407              		.loc 1 291 3 view .LVU122
 291:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 408              		.loc 1 291 26 is_stmt 0 view .LVU123
 409 0004 0023     		movs	r3, #0
 410 0006 0A93     		str	r3, [sp, #40]
 411 0008 0B93     		str	r3, [sp, #44]
 412 000a 0C93     		str	r3, [sp, #48]
 413 000c 0D93     		str	r3, [sp, #52]
 292:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 414              		.loc 1 292 3 is_stmt 1 view .LVU124
 292:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 415              		.loc 1 292 27 is_stmt 0 view .LVU125
 416 000e 0893     		str	r3, [sp, #32]
 417 0010 0993     		str	r3, [sp, #36]
 293:Core/Src/main.c **** 
 418              		.loc 1 293 3 is_stmt 1 view .LVU126
 293:Core/Src/main.c **** 
 419              		.loc 1 293 22 is_stmt 0 view .LVU127
 420 0012 0193     		str	r3, [sp, #4]
 421 0014 0293     		str	r3, [sp, #8]
 422 0016 0393     		str	r3, [sp, #12]
 423 0018 0493     		str	r3, [sp, #16]
 424 001a 0593     		str	r3, [sp, #20]
 425 001c 0693     		str	r3, [sp, #24]
 426 001e 0793     		str	r3, [sp, #28]
 298:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 427              		.loc 1 298 3 is_stmt 1 view .LVU128
 298:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 428              		.loc 1 298 18 is_stmt 0 view .LVU129
 429 0020 2748     		ldr	r0, .L34
 430 0022 4FF08042 		mov	r2, #1073741824
ARM GAS  /tmp/ccgXEIYh.s 			page 21


 431 0026 0260     		str	r2, [r0]
 299:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 432              		.loc 1 299 3 is_stmt 1 view .LVU130
 299:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 433              		.loc 1 299 24 is_stmt 0 view .LVU131
 434 0028 4360     		str	r3, [r0, #4]
 300:Core/Src/main.c ****   htim2.Init.Period = 65535;
 435              		.loc 1 300 3 is_stmt 1 view .LVU132
 300:Core/Src/main.c ****   htim2.Init.Period = 65535;
 436              		.loc 1 300 26 is_stmt 0 view .LVU133
 437 002a 8360     		str	r3, [r0, #8]
 301:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 438              		.loc 1 301 3 is_stmt 1 view .LVU134
 301:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 439              		.loc 1 301 21 is_stmt 0 view .LVU135
 440 002c 4FF6FF72 		movw	r2, #65535
 441 0030 C260     		str	r2, [r0, #12]
 302:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 442              		.loc 1 302 3 is_stmt 1 view .LVU136
 302:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 443              		.loc 1 302 28 is_stmt 0 view .LVU137
 444 0032 0361     		str	r3, [r0, #16]
 303:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 445              		.loc 1 303 3 is_stmt 1 view .LVU138
 303:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 446              		.loc 1 303 32 is_stmt 0 view .LVU139
 447 0034 8361     		str	r3, [r0, #24]
 304:Core/Src/main.c ****   {
 448              		.loc 1 304 3 is_stmt 1 view .LVU140
 304:Core/Src/main.c ****   {
 449              		.loc 1 304 7 is_stmt 0 view .LVU141
 450 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 451              	.LVL9:
 304:Core/Src/main.c ****   {
 452              		.loc 1 304 6 discriminator 1 view .LVU142
 453 003a 0028     		cmp	r0, #0
 454 003c 31D1     		bne	.L27
 308:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 455              		.loc 1 308 3 is_stmt 1 view .LVU143
 308:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 456              		.loc 1 308 34 is_stmt 0 view .LVU144
 457 003e 4FF48053 		mov	r3, #4096
 458 0042 0A93     		str	r3, [sp, #40]
 309:Core/Src/main.c ****   {
 459              		.loc 1 309 3 is_stmt 1 view .LVU145
 309:Core/Src/main.c ****   {
 460              		.loc 1 309 7 is_stmt 0 view .LVU146
 461 0044 0AA9     		add	r1, sp, #40
 462 0046 1E48     		ldr	r0, .L34
 463 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 464              	.LVL10:
 309:Core/Src/main.c ****   {
 465              		.loc 1 309 6 discriminator 1 view .LVU147
 466 004c 58BB     		cbnz	r0, .L28
 313:Core/Src/main.c ****   {
 467              		.loc 1 313 3 is_stmt 1 view .LVU148
 313:Core/Src/main.c ****   {
ARM GAS  /tmp/ccgXEIYh.s 			page 22


 468              		.loc 1 313 7 is_stmt 0 view .LVU149
 469 004e 1C48     		ldr	r0, .L34
 470 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 471              	.LVL11:
 313:Core/Src/main.c ****   {
 472              		.loc 1 313 6 discriminator 1 view .LVU150
 473 0054 48BB     		cbnz	r0, .L29
 317:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 474              		.loc 1 317 3 is_stmt 1 view .LVU151
 317:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 475              		.loc 1 317 37 is_stmt 0 view .LVU152
 476 0056 0023     		movs	r3, #0
 477 0058 0893     		str	r3, [sp, #32]
 318:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 478              		.loc 1 318 3 is_stmt 1 view .LVU153
 318:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 479              		.loc 1 318 33 is_stmt 0 view .LVU154
 480 005a 0993     		str	r3, [sp, #36]
 319:Core/Src/main.c ****   {
 481              		.loc 1 319 3 is_stmt 1 view .LVU155
 319:Core/Src/main.c ****   {
 482              		.loc 1 319 7 is_stmt 0 view .LVU156
 483 005c 08A9     		add	r1, sp, #32
 484 005e 1848     		ldr	r0, .L34
 485 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 486              	.LVL12:
 319:Core/Src/main.c ****   {
 487              		.loc 1 319 6 discriminator 1 view .LVU157
 488 0064 18BB     		cbnz	r0, .L30
 323:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 489              		.loc 1 323 3 is_stmt 1 view .LVU158
 323:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 490              		.loc 1 323 20 is_stmt 0 view .LVU159
 491 0066 6023     		movs	r3, #96
 492 0068 0193     		str	r3, [sp, #4]
 324:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 493              		.loc 1 324 3 is_stmt 1 view .LVU160
 324:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 494              		.loc 1 324 19 is_stmt 0 view .LVU161
 495 006a 0022     		movs	r2, #0
 496 006c 0292     		str	r2, [sp, #8]
 325:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 497              		.loc 1 325 3 is_stmt 1 view .LVU162
 325:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 498              		.loc 1 325 24 is_stmt 0 view .LVU163
 499 006e 0392     		str	r2, [sp, #12]
 326:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 500              		.loc 1 326 3 is_stmt 1 view .LVU164
 326:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 501              		.loc 1 326 24 is_stmt 0 view .LVU165
 502 0070 0592     		str	r2, [sp, #20]
 327:Core/Src/main.c ****   {
 503              		.loc 1 327 3 is_stmt 1 view .LVU166
 327:Core/Src/main.c ****   {
 504              		.loc 1 327 7 is_stmt 0 view .LVU167
 505 0072 01A9     		add	r1, sp, #4
 506 0074 1248     		ldr	r0, .L34
ARM GAS  /tmp/ccgXEIYh.s 			page 23


 507 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 508              	.LVL13:
 327:Core/Src/main.c ****   {
 509              		.loc 1 327 6 discriminator 1 view .LVU168
 510 007a D0B9     		cbnz	r0, .L31
 331:Core/Src/main.c ****   {
 511              		.loc 1 331 3 is_stmt 1 view .LVU169
 331:Core/Src/main.c ****   {
 512              		.loc 1 331 7 is_stmt 0 view .LVU170
 513 007c 0422     		movs	r2, #4
 514 007e 0DEB0201 		add	r1, sp, r2
 515 0082 0F48     		ldr	r0, .L34
 516 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 517              	.LVL14:
 331:Core/Src/main.c ****   {
 518              		.loc 1 331 6 discriminator 1 view .LVU171
 519 0088 A8B9     		cbnz	r0, .L32
 335:Core/Src/main.c ****   {
 520              		.loc 1 335 3 is_stmt 1 view .LVU172
 335:Core/Src/main.c ****   {
 521              		.loc 1 335 7 is_stmt 0 view .LVU173
 522 008a 0822     		movs	r2, #8
 523 008c 01A9     		add	r1, sp, #4
 524 008e 0C48     		ldr	r0, .L34
 525 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 526              	.LVL15:
 335:Core/Src/main.c ****   {
 527              		.loc 1 335 6 discriminator 1 view .LVU174
 528 0094 88B9     		cbnz	r0, .L33
 342:Core/Src/main.c **** 
 529              		.loc 1 342 3 is_stmt 1 view .LVU175
 530 0096 0A48     		ldr	r0, .L34
 531 0098 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 532              	.LVL16:
 344:Core/Src/main.c **** 
 533              		.loc 1 344 1 is_stmt 0 view .LVU176
 534 009c 0FB0     		add	sp, sp, #60
 535              	.LCFI9:
 536              		.cfi_remember_state
 537              		.cfi_def_cfa_offset 4
 538              		@ sp needed
 539 009e 5DF804FB 		ldr	pc, [sp], #4
 540              	.L27:
 541              	.LCFI10:
 542              		.cfi_restore_state
 306:Core/Src/main.c ****   }
 543              		.loc 1 306 5 is_stmt 1 view .LVU177
 544 00a2 FFF7FEFF 		bl	Error_Handler
 545              	.LVL17:
 546              	.L28:
 311:Core/Src/main.c ****   }
 547              		.loc 1 311 5 view .LVU178
 548 00a6 FFF7FEFF 		bl	Error_Handler
 549              	.LVL18:
 550              	.L29:
 315:Core/Src/main.c ****   }
 551              		.loc 1 315 5 view .LVU179
ARM GAS  /tmp/ccgXEIYh.s 			page 24


 552 00aa FFF7FEFF 		bl	Error_Handler
 553              	.LVL19:
 554              	.L30:
 321:Core/Src/main.c ****   }
 555              		.loc 1 321 5 view .LVU180
 556 00ae FFF7FEFF 		bl	Error_Handler
 557              	.LVL20:
 558              	.L31:
 329:Core/Src/main.c ****   }
 559              		.loc 1 329 5 view .LVU181
 560 00b2 FFF7FEFF 		bl	Error_Handler
 561              	.LVL21:
 562              	.L32:
 333:Core/Src/main.c ****   }
 563              		.loc 1 333 5 view .LVU182
 564 00b6 FFF7FEFF 		bl	Error_Handler
 565              	.LVL22:
 566              	.L33:
 337:Core/Src/main.c ****   }
 567              		.loc 1 337 5 view .LVU183
 568 00ba FFF7FEFF 		bl	Error_Handler
 569              	.LVL23:
 570              	.L35:
 571 00be 00BF     		.align	2
 572              	.L34:
 573 00c0 00000000 		.word	htim2
 574              		.cfi_endproc
 575              	.LFE73:
 577              		.section	.text.MX_TIM3_Init,"ax",%progbits
 578              		.align	1
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 583              	MX_TIM3_Init:
 584              	.LFB74:
 352:Core/Src/main.c **** 
 585              		.loc 1 352 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 48
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 00B5     		push	{lr}
 590              	.LCFI11:
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 14, -4
 593 0002 8DB0     		sub	sp, sp, #52
 594              	.LCFI12:
 595              		.cfi_def_cfa_offset 56
 358:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 596              		.loc 1 358 3 view .LVU185
 358:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 597              		.loc 1 358 27 is_stmt 0 view .LVU186
 598 0004 2422     		movs	r2, #36
 599 0006 0021     		movs	r1, #0
 600 0008 03A8     		add	r0, sp, #12
 601 000a FFF7FEFF 		bl	memset
 602              	.LVL24:
 359:Core/Src/main.c **** 
ARM GAS  /tmp/ccgXEIYh.s 			page 25


 603              		.loc 1 359 3 is_stmt 1 view .LVU187
 359:Core/Src/main.c **** 
 604              		.loc 1 359 27 is_stmt 0 view .LVU188
 605 000e 0023     		movs	r3, #0
 606 0010 0193     		str	r3, [sp, #4]
 607 0012 0293     		str	r3, [sp, #8]
 364:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 608              		.loc 1 364 3 is_stmt 1 view .LVU189
 364:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 609              		.loc 1 364 18 is_stmt 0 view .LVU190
 610 0014 1048     		ldr	r0, .L42
 611 0016 114A     		ldr	r2, .L42+4
 612 0018 0260     		str	r2, [r0]
 365:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 613              		.loc 1 365 3 is_stmt 1 view .LVU191
 365:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 614              		.loc 1 365 24 is_stmt 0 view .LVU192
 615 001a 4360     		str	r3, [r0, #4]
 366:Core/Src/main.c ****   htim3.Init.Period = 65535;
 616              		.loc 1 366 3 is_stmt 1 view .LVU193
 366:Core/Src/main.c ****   htim3.Init.Period = 65535;
 617              		.loc 1 366 26 is_stmt 0 view .LVU194
 618 001c 8360     		str	r3, [r0, #8]
 367:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 619              		.loc 1 367 3 is_stmt 1 view .LVU195
 367:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 620              		.loc 1 367 21 is_stmt 0 view .LVU196
 621 001e 4FF6FF72 		movw	r2, #65535
 622 0022 C260     		str	r2, [r0, #12]
 368:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 623              		.loc 1 368 3 is_stmt 1 view .LVU197
 368:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 624              		.loc 1 368 28 is_stmt 0 view .LVU198
 625 0024 0361     		str	r3, [r0, #16]
 369:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 626              		.loc 1 369 3 is_stmt 1 view .LVU199
 369:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 627              		.loc 1 369 32 is_stmt 0 view .LVU200
 628 0026 8361     		str	r3, [r0, #24]
 370:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 629              		.loc 1 370 3 is_stmt 1 view .LVU201
 370:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 630              		.loc 1 370 23 is_stmt 0 view .LVU202
 631 0028 0123     		movs	r3, #1
 632 002a 0393     		str	r3, [sp, #12]
 371:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 633              		.loc 1 371 3 is_stmt 1 view .LVU203
 372:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 634              		.loc 1 372 3 view .LVU204
 372:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 635              		.loc 1 372 24 is_stmt 0 view .LVU205
 636 002c 0593     		str	r3, [sp, #20]
 373:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 637              		.loc 1 373 3 is_stmt 1 view .LVU206
 374:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 638              		.loc 1 374 3 view .LVU207
 375:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
ARM GAS  /tmp/ccgXEIYh.s 			page 26


 639              		.loc 1 375 3 view .LVU208
 376:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 640              		.loc 1 376 3 view .LVU209
 376:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 641              		.loc 1 376 24 is_stmt 0 view .LVU210
 642 002e 0993     		str	r3, [sp, #36]
 377:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 643              		.loc 1 377 3 is_stmt 1 view .LVU211
 378:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 644              		.loc 1 378 3 view .LVU212
 379:Core/Src/main.c ****   {
 645              		.loc 1 379 3 view .LVU213
 379:Core/Src/main.c ****   {
 646              		.loc 1 379 7 is_stmt 0 view .LVU214
 647 0030 03A9     		add	r1, sp, #12
 648 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 649              	.LVL25:
 379:Core/Src/main.c ****   {
 650              		.loc 1 379 6 discriminator 1 view .LVU215
 651 0036 50B9     		cbnz	r0, .L40
 383:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 652              		.loc 1 383 3 is_stmt 1 view .LVU216
 383:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 653              		.loc 1 383 37 is_stmt 0 view .LVU217
 654 0038 0023     		movs	r3, #0
 655 003a 0193     		str	r3, [sp, #4]
 384:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 656              		.loc 1 384 3 is_stmt 1 view .LVU218
 384:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 657              		.loc 1 384 33 is_stmt 0 view .LVU219
 658 003c 0293     		str	r3, [sp, #8]
 385:Core/Src/main.c ****   {
 659              		.loc 1 385 3 is_stmt 1 view .LVU220
 385:Core/Src/main.c ****   {
 660              		.loc 1 385 7 is_stmt 0 view .LVU221
 661 003e 01A9     		add	r1, sp, #4
 662 0040 0548     		ldr	r0, .L42
 663 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 664              	.LVL26:
 385:Core/Src/main.c ****   {
 665              		.loc 1 385 6 discriminator 1 view .LVU222
 666 0046 20B9     		cbnz	r0, .L41
 393:Core/Src/main.c **** 
 667              		.loc 1 393 1 view .LVU223
 668 0048 0DB0     		add	sp, sp, #52
 669              	.LCFI13:
 670              		.cfi_remember_state
 671              		.cfi_def_cfa_offset 4
 672              		@ sp needed
 673 004a 5DF804FB 		ldr	pc, [sp], #4
 674              	.L40:
 675              	.LCFI14:
 676              		.cfi_restore_state
 381:Core/Src/main.c ****   }
 677              		.loc 1 381 5 is_stmt 1 view .LVU224
 678 004e FFF7FEFF 		bl	Error_Handler
 679              	.LVL27:
ARM GAS  /tmp/ccgXEIYh.s 			page 27


 680              	.L41:
 387:Core/Src/main.c ****   }
 681              		.loc 1 387 5 view .LVU225
 682 0052 FFF7FEFF 		bl	Error_Handler
 683              	.LVL28:
 684              	.L43:
 685 0056 00BF     		.align	2
 686              	.L42:
 687 0058 00000000 		.word	htim3
 688 005c 00040040 		.word	1073742848
 689              		.cfi_endproc
 690              	.LFE74:
 692              		.section	.text.MX_TIM4_Init,"ax",%progbits
 693              		.align	1
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 698              	MX_TIM4_Init:
 699              	.LFB75:
 401:Core/Src/main.c **** 
 700              		.loc 1 401 1 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 48
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 00B5     		push	{lr}
 705              	.LCFI15:
 706              		.cfi_def_cfa_offset 4
 707              		.cfi_offset 14, -4
 708 0002 8DB0     		sub	sp, sp, #52
 709              	.LCFI16:
 710              		.cfi_def_cfa_offset 56
 407:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 711              		.loc 1 407 3 view .LVU227
 407:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 712              		.loc 1 407 27 is_stmt 0 view .LVU228
 713 0004 2422     		movs	r2, #36
 714 0006 0021     		movs	r1, #0
 715 0008 03A8     		add	r0, sp, #12
 716 000a FFF7FEFF 		bl	memset
 717              	.LVL29:
 408:Core/Src/main.c **** 
 718              		.loc 1 408 3 is_stmt 1 view .LVU229
 408:Core/Src/main.c **** 
 719              		.loc 1 408 27 is_stmt 0 view .LVU230
 720 000e 0023     		movs	r3, #0
 721 0010 0193     		str	r3, [sp, #4]
 722 0012 0293     		str	r3, [sp, #8]
 413:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 723              		.loc 1 413 3 is_stmt 1 view .LVU231
 413:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 724              		.loc 1 413 18 is_stmt 0 view .LVU232
 725 0014 1048     		ldr	r0, .L50
 726 0016 114A     		ldr	r2, .L50+4
 727 0018 0260     		str	r2, [r0]
 414:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 728              		.loc 1 414 3 is_stmt 1 view .LVU233
 414:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccgXEIYh.s 			page 28


 729              		.loc 1 414 24 is_stmt 0 view .LVU234
 730 001a 4360     		str	r3, [r0, #4]
 415:Core/Src/main.c ****   htim4.Init.Period = 65535;
 731              		.loc 1 415 3 is_stmt 1 view .LVU235
 415:Core/Src/main.c ****   htim4.Init.Period = 65535;
 732              		.loc 1 415 26 is_stmt 0 view .LVU236
 733 001c 8360     		str	r3, [r0, #8]
 416:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 734              		.loc 1 416 3 is_stmt 1 view .LVU237
 416:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 735              		.loc 1 416 21 is_stmt 0 view .LVU238
 736 001e 4FF6FF72 		movw	r2, #65535
 737 0022 C260     		str	r2, [r0, #12]
 417:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 738              		.loc 1 417 3 is_stmt 1 view .LVU239
 417:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 739              		.loc 1 417 28 is_stmt 0 view .LVU240
 740 0024 0361     		str	r3, [r0, #16]
 418:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 741              		.loc 1 418 3 is_stmt 1 view .LVU241
 418:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 742              		.loc 1 418 32 is_stmt 0 view .LVU242
 743 0026 8361     		str	r3, [r0, #24]
 419:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 744              		.loc 1 419 3 is_stmt 1 view .LVU243
 419:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 745              		.loc 1 419 23 is_stmt 0 view .LVU244
 746 0028 0123     		movs	r3, #1
 747 002a 0393     		str	r3, [sp, #12]
 420:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 748              		.loc 1 420 3 is_stmt 1 view .LVU245
 421:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 749              		.loc 1 421 3 view .LVU246
 421:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 750              		.loc 1 421 24 is_stmt 0 view .LVU247
 751 002c 0593     		str	r3, [sp, #20]
 422:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 752              		.loc 1 422 3 is_stmt 1 view .LVU248
 423:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 753              		.loc 1 423 3 view .LVU249
 424:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 754              		.loc 1 424 3 view .LVU250
 425:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 755              		.loc 1 425 3 view .LVU251
 425:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 756              		.loc 1 425 24 is_stmt 0 view .LVU252
 757 002e 0993     		str	r3, [sp, #36]
 426:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 758              		.loc 1 426 3 is_stmt 1 view .LVU253
 427:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 759              		.loc 1 427 3 view .LVU254
 428:Core/Src/main.c ****   {
 760              		.loc 1 428 3 view .LVU255
 428:Core/Src/main.c ****   {
 761              		.loc 1 428 7 is_stmt 0 view .LVU256
 762 0030 03A9     		add	r1, sp, #12
 763 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
ARM GAS  /tmp/ccgXEIYh.s 			page 29


 764              	.LVL30:
 428:Core/Src/main.c ****   {
 765              		.loc 1 428 6 discriminator 1 view .LVU257
 766 0036 50B9     		cbnz	r0, .L48
 432:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 767              		.loc 1 432 3 is_stmt 1 view .LVU258
 432:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 768              		.loc 1 432 37 is_stmt 0 view .LVU259
 769 0038 0023     		movs	r3, #0
 770 003a 0193     		str	r3, [sp, #4]
 433:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 771              		.loc 1 433 3 is_stmt 1 view .LVU260
 433:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 772              		.loc 1 433 33 is_stmt 0 view .LVU261
 773 003c 0293     		str	r3, [sp, #8]
 434:Core/Src/main.c ****   {
 774              		.loc 1 434 3 is_stmt 1 view .LVU262
 434:Core/Src/main.c ****   {
 775              		.loc 1 434 7 is_stmt 0 view .LVU263
 776 003e 01A9     		add	r1, sp, #4
 777 0040 0548     		ldr	r0, .L50
 778 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 779              	.LVL31:
 434:Core/Src/main.c ****   {
 780              		.loc 1 434 6 discriminator 1 view .LVU264
 781 0046 20B9     		cbnz	r0, .L49
 442:Core/Src/main.c **** 
 782              		.loc 1 442 1 view .LVU265
 783 0048 0DB0     		add	sp, sp, #52
 784              	.LCFI17:
 785              		.cfi_remember_state
 786              		.cfi_def_cfa_offset 4
 787              		@ sp needed
 788 004a 5DF804FB 		ldr	pc, [sp], #4
 789              	.L48:
 790              	.LCFI18:
 791              		.cfi_restore_state
 430:Core/Src/main.c ****   }
 792              		.loc 1 430 5 is_stmt 1 view .LVU266
 793 004e FFF7FEFF 		bl	Error_Handler
 794              	.LVL32:
 795              	.L49:
 436:Core/Src/main.c ****   }
 796              		.loc 1 436 5 view .LVU267
 797 0052 FFF7FEFF 		bl	Error_Handler
 798              	.LVL33:
 799              	.L51:
 800 0056 00BF     		.align	2
 801              	.L50:
 802 0058 00000000 		.word	htim4
 803 005c 00080040 		.word	1073743872
 804              		.cfi_endproc
 805              	.LFE75:
 807              		.section	.text.MX_SPI1_Init,"ax",%progbits
 808              		.align	1
 809              		.syntax unified
 810              		.thumb
ARM GAS  /tmp/ccgXEIYh.s 			page 30


 811              		.thumb_func
 813              	MX_SPI1_Init:
 814              	.LFB71:
 197:Core/Src/main.c **** 
 815              		.loc 1 197 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 08B5     		push	{r3, lr}
 820              	.LCFI19:
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 3, -8
 823              		.cfi_offset 14, -4
 207:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 824              		.loc 1 207 3 view .LVU269
 207:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 825              		.loc 1 207 18 is_stmt 0 view .LVU270
 826 0002 0D48     		ldr	r0, .L56
 827 0004 0D4B     		ldr	r3, .L56+4
 828 0006 0360     		str	r3, [r0]
 208:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 829              		.loc 1 208 3 is_stmt 1 view .LVU271
 208:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 830              		.loc 1 208 19 is_stmt 0 view .LVU272
 831 0008 4FF48273 		mov	r3, #260
 832 000c 4360     		str	r3, [r0, #4]
 209:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 833              		.loc 1 209 3 is_stmt 1 view .LVU273
 209:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 834              		.loc 1 209 24 is_stmt 0 view .LVU274
 835 000e 0023     		movs	r3, #0
 836 0010 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 837              		.loc 1 210 3 is_stmt 1 view .LVU275
 210:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 838              		.loc 1 210 23 is_stmt 0 view .LVU276
 839 0012 C360     		str	r3, [r0, #12]
 211:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 840              		.loc 1 211 3 is_stmt 1 view .LVU277
 211:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 841              		.loc 1 211 26 is_stmt 0 view .LVU278
 842 0014 0361     		str	r3, [r0, #16]
 212:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 843              		.loc 1 212 3 is_stmt 1 view .LVU279
 212:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 844              		.loc 1 212 23 is_stmt 0 view .LVU280
 845 0016 4361     		str	r3, [r0, #20]
 213:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 846              		.loc 1 213 3 is_stmt 1 view .LVU281
 213:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 847              		.loc 1 213 18 is_stmt 0 view .LVU282
 848 0018 4FF40072 		mov	r2, #512
 849 001c 8261     		str	r2, [r0, #24]
 214:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 850              		.loc 1 214 3 is_stmt 1 view .LVU283
 214:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 851              		.loc 1 214 32 is_stmt 0 view .LVU284
ARM GAS  /tmp/ccgXEIYh.s 			page 31


 852 001e 0822     		movs	r2, #8
 853 0020 C261     		str	r2, [r0, #28]
 215:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 854              		.loc 1 215 3 is_stmt 1 view .LVU285
 215:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 855              		.loc 1 215 23 is_stmt 0 view .LVU286
 856 0022 0362     		str	r3, [r0, #32]
 216:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 857              		.loc 1 216 3 is_stmt 1 view .LVU287
 216:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 858              		.loc 1 216 21 is_stmt 0 view .LVU288
 859 0024 4362     		str	r3, [r0, #36]
 217:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 860              		.loc 1 217 3 is_stmt 1 view .LVU289
 217:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 861              		.loc 1 217 29 is_stmt 0 view .LVU290
 862 0026 8362     		str	r3, [r0, #40]
 218:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 863              		.loc 1 218 3 is_stmt 1 view .LVU291
 218:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 864              		.loc 1 218 28 is_stmt 0 view .LVU292
 865 0028 0A23     		movs	r3, #10
 866 002a C362     		str	r3, [r0, #44]
 219:Core/Src/main.c ****   {
 867              		.loc 1 219 3 is_stmt 1 view .LVU293
 219:Core/Src/main.c ****   {
 868              		.loc 1 219 7 is_stmt 0 view .LVU294
 869 002c FFF7FEFF 		bl	HAL_SPI_Init
 870              	.LVL34:
 219:Core/Src/main.c ****   {
 871              		.loc 1 219 6 discriminator 1 view .LVU295
 872 0030 00B9     		cbnz	r0, .L55
 227:Core/Src/main.c **** 
 873              		.loc 1 227 1 view .LVU296
 874 0032 08BD     		pop	{r3, pc}
 875              	.L55:
 221:Core/Src/main.c ****   }
 876              		.loc 1 221 5 is_stmt 1 view .LVU297
 877 0034 FFF7FEFF 		bl	Error_Handler
 878              	.LVL35:
 879              	.L57:
 880              		.align	2
 881              	.L56:
 882 0038 00000000 		.word	hspi1
 883 003c 00300140 		.word	1073819648
 884              		.cfi_endproc
 885              	.LFE71:
 887              		.section	.text.SystemClock_Config,"ax",%progbits
 888              		.align	1
 889              		.global	SystemClock_Config
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	SystemClock_Config:
 895              	.LFB70:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 896              		.loc 1 151 1 view -0
ARM GAS  /tmp/ccgXEIYh.s 			page 32


 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 80
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900 0000 00B5     		push	{lr}
 901              	.LCFI20:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 14, -4
 904 0002 95B0     		sub	sp, sp, #84
 905              	.LCFI21:
 906              		.cfi_def_cfa_offset 88
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 907              		.loc 1 152 3 view .LVU299
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 908              		.loc 1 152 22 is_stmt 0 view .LVU300
 909 0004 2822     		movs	r2, #40
 910 0006 0021     		movs	r1, #0
 911 0008 0DEB0200 		add	r0, sp, r2
 912 000c FFF7FEFF 		bl	memset
 913              	.LVL36:
 153:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 914              		.loc 1 153 3 is_stmt 1 view .LVU301
 153:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 915              		.loc 1 153 22 is_stmt 0 view .LVU302
 916 0010 0023     		movs	r3, #0
 917 0012 0593     		str	r3, [sp, #20]
 918 0014 0693     		str	r3, [sp, #24]
 919 0016 0793     		str	r3, [sp, #28]
 920 0018 0893     		str	r3, [sp, #32]
 921 001a 0993     		str	r3, [sp, #36]
 154:Core/Src/main.c **** 
 922              		.loc 1 154 3 is_stmt 1 view .LVU303
 154:Core/Src/main.c **** 
 923              		.loc 1 154 28 is_stmt 0 view .LVU304
 924 001c 0193     		str	r3, [sp, #4]
 925 001e 0293     		str	r3, [sp, #8]
 926 0020 0393     		str	r3, [sp, #12]
 927 0022 0493     		str	r3, [sp, #16]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 928              		.loc 1 159 3 is_stmt 1 view .LVU305
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 929              		.loc 1 159 36 is_stmt 0 view .LVU306
 930 0024 0122     		movs	r2, #1
 931 0026 0A92     		str	r2, [sp, #40]
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 932              		.loc 1 160 3 is_stmt 1 view .LVU307
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 933              		.loc 1 160 30 is_stmt 0 view .LVU308
 934 0028 4FF48033 		mov	r3, #65536
 935 002c 0B93     		str	r3, [sp, #44]
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 936              		.loc 1 161 3 is_stmt 1 view .LVU309
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 937              		.loc 1 162 3 view .LVU310
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 938              		.loc 1 162 30 is_stmt 0 view .LVU311
 939 002e 0E92     		str	r2, [sp, #56]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccgXEIYh.s 			page 33


 940              		.loc 1 163 3 is_stmt 1 view .LVU312
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 941              		.loc 1 163 34 is_stmt 0 view .LVU313
 942 0030 0222     		movs	r2, #2
 943 0032 1192     		str	r2, [sp, #68]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 944              		.loc 1 164 3 is_stmt 1 view .LVU314
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 945              		.loc 1 164 35 is_stmt 0 view .LVU315
 946 0034 1293     		str	r3, [sp, #72]
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 947              		.loc 1 165 3 is_stmt 1 view .LVU316
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 948              		.loc 1 165 32 is_stmt 0 view .LVU317
 949 0036 4FF4E013 		mov	r3, #1835008
 950 003a 1393     		str	r3, [sp, #76]
 166:Core/Src/main.c ****   {
 951              		.loc 1 166 3 is_stmt 1 view .LVU318
 166:Core/Src/main.c ****   {
 952              		.loc 1 166 7 is_stmt 0 view .LVU319
 953 003c 0AA8     		add	r0, sp, #40
 954 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 955              	.LVL37:
 166:Core/Src/main.c ****   {
 956              		.loc 1 166 6 discriminator 1 view .LVU320
 957 0042 C0B9     		cbnz	r0, .L63
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 958              		.loc 1 172 3 is_stmt 1 view .LVU321
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 959              		.loc 1 172 31 is_stmt 0 view .LVU322
 960 0044 0F23     		movs	r3, #15
 961 0046 0593     		str	r3, [sp, #20]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 962              		.loc 1 174 3 is_stmt 1 view .LVU323
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 963              		.loc 1 174 34 is_stmt 0 view .LVU324
 964 0048 0221     		movs	r1, #2
 965 004a 0691     		str	r1, [sp, #24]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 966              		.loc 1 175 3 is_stmt 1 view .LVU325
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 967              		.loc 1 175 35 is_stmt 0 view .LVU326
 968 004c 0023     		movs	r3, #0
 969 004e 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 970              		.loc 1 176 3 is_stmt 1 view .LVU327
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 971              		.loc 1 176 36 is_stmt 0 view .LVU328
 972 0050 4FF48062 		mov	r2, #1024
 973 0054 0892     		str	r2, [sp, #32]
 177:Core/Src/main.c **** 
 974              		.loc 1 177 3 is_stmt 1 view .LVU329
 177:Core/Src/main.c **** 
 975              		.loc 1 177 36 is_stmt 0 view .LVU330
 976 0056 0993     		str	r3, [sp, #36]
 179:Core/Src/main.c ****   {
 977              		.loc 1 179 3 is_stmt 1 view .LVU331
ARM GAS  /tmp/ccgXEIYh.s 			page 34


 179:Core/Src/main.c ****   {
 978              		.loc 1 179 7 is_stmt 0 view .LVU332
 979 0058 05A8     		add	r0, sp, #20
 980 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 981              	.LVL38:
 179:Core/Src/main.c ****   {
 982              		.loc 1 179 6 discriminator 1 view .LVU333
 983 005e 60B9     		cbnz	r0, .L64
 183:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 984              		.loc 1 183 3 is_stmt 1 view .LVU334
 183:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 985              		.loc 1 183 38 is_stmt 0 view .LVU335
 986 0060 1023     		movs	r3, #16
 987 0062 0193     		str	r3, [sp, #4]
 184:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 988              		.loc 1 184 3 is_stmt 1 view .LVU336
 184:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 989              		.loc 1 184 35 is_stmt 0 view .LVU337
 990 0064 0023     		movs	r3, #0
 991 0066 0493     		str	r3, [sp, #16]
 185:Core/Src/main.c ****   {
 992              		.loc 1 185 3 is_stmt 1 view .LVU338
 185:Core/Src/main.c ****   {
 993              		.loc 1 185 7 is_stmt 0 view .LVU339
 994 0068 01A8     		add	r0, sp, #4
 995 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 996              	.LVL39:
 185:Core/Src/main.c ****   {
 997              		.loc 1 185 6 discriminator 1 view .LVU340
 998 006e 30B9     		cbnz	r0, .L65
 189:Core/Src/main.c **** 
 999              		.loc 1 189 1 view .LVU341
 1000 0070 15B0     		add	sp, sp, #84
 1001              	.LCFI22:
 1002              		.cfi_remember_state
 1003              		.cfi_def_cfa_offset 4
 1004              		@ sp needed
 1005 0072 5DF804FB 		ldr	pc, [sp], #4
 1006              	.L63:
 1007              	.LCFI23:
 1008              		.cfi_restore_state
 168:Core/Src/main.c ****   }
 1009              		.loc 1 168 5 is_stmt 1 view .LVU342
 1010 0076 FFF7FEFF 		bl	Error_Handler
 1011              	.LVL40:
 1012              	.L64:
 181:Core/Src/main.c ****   }
 1013              		.loc 1 181 5 view .LVU343
 1014 007a FFF7FEFF 		bl	Error_Handler
 1015              	.LVL41:
 1016              	.L65:
 187:Core/Src/main.c ****   }
 1017              		.loc 1 187 5 view .LVU344
 1018 007e FFF7FEFF 		bl	Error_Handler
 1019              	.LVL42:
 1020              		.cfi_endproc
 1021              	.LFE70:
ARM GAS  /tmp/ccgXEIYh.s 			page 35


 1023              		.section	.text.main,"ax",%progbits
 1024              		.align	1
 1025              		.global	main
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1030              	main:
 1031              	.LFB69:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1032              		.loc 1 100 1 view -0
 1033              		.cfi_startproc
 1034              		@ Volatile: function does not return.
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 08B5     		push	{r3, lr}
 1038              	.LCFI24:
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 3, -8
 1041              		.cfi_offset 14, -4
 108:Core/Src/main.c **** 
 1042              		.loc 1 108 3 view .LVU346
 1043 0002 FFF7FEFF 		bl	HAL_Init
 1044              	.LVL43:
 115:Core/Src/main.c **** 
 1045              		.loc 1 115 3 view .LVU347
 1046 0006 FFF7FEFF 		bl	SystemClock_Config
 1047              	.LVL44:
 122:Core/Src/main.c ****   MX_TIM1_Init();
 1048              		.loc 1 122 3 view .LVU348
 1049 000a FFF7FEFF 		bl	MX_GPIO_Init
 1050              	.LVL45:
 123:Core/Src/main.c ****   MX_TIM2_Init();
 1051              		.loc 1 123 3 view .LVU349
 1052 000e FFF7FEFF 		bl	MX_TIM1_Init
 1053              	.LVL46:
 124:Core/Src/main.c ****   MX_TIM3_Init();
 1054              		.loc 1 124 3 view .LVU350
 1055 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1056              	.LVL47:
 125:Core/Src/main.c ****   MX_TIM4_Init();
 1057              		.loc 1 125 3 view .LVU351
 1058 0016 FFF7FEFF 		bl	MX_TIM3_Init
 1059              	.LVL48:
 126:Core/Src/main.c ****   MX_SPI1_Init();
 1060              		.loc 1 126 3 view .LVU352
 1061 001a FFF7FEFF 		bl	MX_TIM4_Init
 1062              	.LVL49:
 127:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 1063              		.loc 1 127 3 view .LVU353
 1064 001e FFF7FEFF 		bl	MX_SPI1_Init
 1065              	.LVL50:
 128:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1066              		.loc 1 128 3 view .LVU354
 1067 0022 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1068              	.LVL51:
 130:Core/Src/main.c **** 
 1069              		.loc 1 130 3 view .LVU355
ARM GAS  /tmp/ccgXEIYh.s 			page 36


 1070 0026 FFF7FEFF 		bl	auto_park_init
 1071              	.LVL52:
 1072              	.L67:
 136:Core/Src/main.c ****   {
 1073              		.loc 1 136 3 view .LVU356
 138:Core/Src/main.c ****     /* USER CODE END WHILE */
 1074              		.loc 1 138 4 discriminator 1 view .LVU357
 1075 002a 0248     		ldr	r0, .L69
 1076 002c FFF7FEFF 		bl	process_mode
 1077              	.LVL53:
 136:Core/Src/main.c ****   {
 1078              		.loc 1 136 9 view .LVU358
 1079 0030 FBE7     		b	.L67
 1080              	.L70:
 1081 0032 00BF     		.align	2
 1082              	.L69:
 1083 0034 00000000 		.word	machine
 1084              		.cfi_endproc
 1085              	.LFE69:
 1087              		.global	machine
 1088              		.section	.bss.machine,"aw",%nobits
 1089              		.align	2
 1092              	machine:
 1093 0000 00000000 		.space	488
 1093      00000000 
 1093      00000000 
 1093      00000000 
 1093      00000000 
 1094              		.global	htim4
 1095              		.section	.bss.htim4,"aw",%nobits
 1096              		.align	2
 1099              	htim4:
 1100 0000 00000000 		.space	72
 1100      00000000 
 1100      00000000 
 1100      00000000 
 1100      00000000 
 1101              		.global	htim3
 1102              		.section	.bss.htim3,"aw",%nobits
 1103              		.align	2
 1106              	htim3:
 1107 0000 00000000 		.space	72
 1107      00000000 
 1107      00000000 
 1107      00000000 
 1107      00000000 
 1108              		.global	htim2
 1109              		.section	.bss.htim2,"aw",%nobits
 1110              		.align	2
 1113              	htim2:
 1114 0000 00000000 		.space	72
 1114      00000000 
 1114      00000000 
 1114      00000000 
 1114      00000000 
 1115              		.global	htim1
 1116              		.section	.bss.htim1,"aw",%nobits
ARM GAS  /tmp/ccgXEIYh.s 			page 37


 1117              		.align	2
 1120              	htim1:
 1121 0000 00000000 		.space	72
 1121      00000000 
 1121      00000000 
 1121      00000000 
 1121      00000000 
 1122              		.global	hspi1
 1123              		.section	.bss.hspi1,"aw",%nobits
 1124              		.align	2
 1127              	hspi1:
 1128 0000 00000000 		.space	88
 1128      00000000 
 1128      00000000 
 1128      00000000 
 1128      00000000 
 1129              		.text
 1130              	.Letext0:
 1131              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1132              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1133              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1134              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1135              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1136              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1137              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1138              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1139              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1140              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1141              		.file 13 "lib/auto_park.h"
 1142              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1143              		.file 15 "Core/Inc/main.h"
 1144              		.file 16 "USB_DEVICE/App/usb_device.h"
 1145              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1146              		.file 18 "<built-in>"
ARM GAS  /tmp/ccgXEIYh.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccgXEIYh.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccgXEIYh.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccgXEIYh.s:156    .text.MX_GPIO_Init:00000094 $d
     /tmp/ccgXEIYh.s:163    .text.auto_park_init:00000000 $t
     /tmp/ccgXEIYh.s:169    .text.auto_park_init:00000000 auto_park_init
     /tmp/ccgXEIYh.s:226    .text.auto_park_init:00000038 $d
     /tmp/ccgXEIYh.s:1092   .bss.machine:00000000 machine
     /tmp/ccgXEIYh.s:233    .text.Error_Handler:00000000 $t
     /tmp/ccgXEIYh.s:239    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccgXEIYh.s:271    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccgXEIYh.s:276    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccgXEIYh.s:383    .text.MX_TIM1_Init:00000058 $d
     /tmp/ccgXEIYh.s:1120   .bss.htim1:00000000 htim1
     /tmp/ccgXEIYh.s:389    .text.MX_TIM2_Init:00000000 $t
     /tmp/ccgXEIYh.s:394    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccgXEIYh.s:573    .text.MX_TIM2_Init:000000c0 $d
     /tmp/ccgXEIYh.s:1113   .bss.htim2:00000000 htim2
     /tmp/ccgXEIYh.s:578    .text.MX_TIM3_Init:00000000 $t
     /tmp/ccgXEIYh.s:583    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccgXEIYh.s:687    .text.MX_TIM3_Init:00000058 $d
     /tmp/ccgXEIYh.s:1106   .bss.htim3:00000000 htim3
     /tmp/ccgXEIYh.s:693    .text.MX_TIM4_Init:00000000 $t
     /tmp/ccgXEIYh.s:698    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
     /tmp/ccgXEIYh.s:802    .text.MX_TIM4_Init:00000058 $d
     /tmp/ccgXEIYh.s:1099   .bss.htim4:00000000 htim4
     /tmp/ccgXEIYh.s:808    .text.MX_SPI1_Init:00000000 $t
     /tmp/ccgXEIYh.s:813    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/ccgXEIYh.s:882    .text.MX_SPI1_Init:00000038 $d
     /tmp/ccgXEIYh.s:1127   .bss.hspi1:00000000 hspi1
     /tmp/ccgXEIYh.s:888    .text.SystemClock_Config:00000000 $t
     /tmp/ccgXEIYh.s:894    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccgXEIYh.s:1024   .text.main:00000000 $t
     /tmp/ccgXEIYh.s:1030   .text.main:00000000 main
     /tmp/ccgXEIYh.s:1083   .text.main:00000034 $d
     /tmp/ccgXEIYh.s:1089   .bss.machine:00000000 $d
     /tmp/ccgXEIYh.s:1096   .bss.htim4:00000000 $d
     /tmp/ccgXEIYh.s:1103   .bss.htim3:00000000 $d
     /tmp/ccgXEIYh.s:1110   .bss.htim2:00000000 $d
     /tmp/ccgXEIYh.s:1117   .bss.htim1:00000000 $d
     /tmp/ccgXEIYh.s:1124   .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
ARM GAS  /tmp/ccgXEIYh.s 			page 39


HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
process_mode
